{"version":3,"sources":["components/InfoHeading.jsx","components/SearchBar.jsx","components/DonutChart.jsx","components/SpiderChart.jsx","components/ChartResults.jsx","components/MetricTable.jsx","components/PitchingTool.jsx","App.js","serviceWorker.js","index.js"],"names":["InfoHeading","props","_useState","useState","_useState2","Object","slicedToArray","lastUpdate","setLastUpdate","useEffect","fetch","method","headers","Accept","Content-Type","then","response","json","data","catch","err","console","log","react_default","a","createElement","AppBar","position","Toolbar","className","Typography","variant","metricOptions","value","label","SearchBar","players","setPlayers","result","map","cv","pitcherId","pitcherName","prepareData","react_select_browser_esm","options","defaultOptions","player","onChange","selectedOption","setPlayerId","setPlayerName","closeMenuOnSelect","isMulti","metricsObject","metrics","setMetrics","toConsumableArray","DonutChart","chart","type","backgroundColor","title","text","colors","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","distance","format","showInLegend","series","name","innerSize","colorByPoint","pitchDist","highcharts_react_min_default","highcharts","Highcharts","SpiderChart","polar","pane","size","xAxis","categories","tickmarkPlacement","lineWidth","labels","yAxis","gridLineInterpolation","min","max","formatter","this","shared","pitchMetrics","aces","whiff","csw","ChartResults","y","setPitchDist","_useState3","_useState4","setPitchMetrics","playerId","endpoint","concat","pitchDistArray","whiffMetric","cswMetric","acesMetric","_i","_Object$keys","keys","length","pitchType","dist","Num","push","Number","setPlayerMetrics","Whiffs","percentile","CSW","ACES","includes","x","MetricTable","playerMetrics","toFixed","PitchingTool","playerName","_useState5","_useState6","_useState7","_useState8","playerObject","HighchartsMore","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5d62fc4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n\nexport default function InfoHeading(props) {\n  const [lastUpdate, setLastUpdate] = useState(\"01/01/2019\");\n\n  useEffect(() => {\n    const endpoint = \"https://aces-backend-dev.s3-us-west-2.amazonaws.com/lastUpdate.json\";\n    const lookupOptions = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(endpoint, lookupOptions)\n      .then(response => response.json())\n      .then(data => {\n        setLastUpdate(data.lastUpdate);\n      })\n      .catch((err) => console.log(err));\n  });\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar className=\"App-bar\">\n          <Typography variant=\"h6\">\n            Pitching Dashboard\n          </Typography>\n          <div className=\"last-update-text\">\n            Last Updated: {lastUpdate}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nimport Select from 'react-select';\n\n// import { players } from './tempData';\n\nconst metricOptions = [\n  { value: 'ACES', label: 'ACES' },\n  { value: 'Whiffs', label: 'Whiffs' },\n  { value: 'CSW', label: 'CSW' },\n  // { value: 'GB+PU%', label: 'GB+PU%' }\n]\n\nexport default function SearchBar(props) {\n  const [players, setPlayers] = useState([]);\n\n  function handlePlayerChange(selectedOption) {\n    props.setPlayerId(selectedOption.value);\n    props.setPlayerName(selectedOption.label);\n  }\n\n  function handleMetricChange(selectedOption) {\n    if (selectedOption) {\n      const metrics = selectedOption.map(cv => cv.value);\n      props.setMetrics([...metrics]);\n    }\n  }\n\n  useEffect(() => {\n    console.log('getting players');\n    const endpoint = 'https://ks506u80el.execute-api.us-west-2.amazonaws.com/dev/pitchers';\n    let lookupOptions = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }\n    fetch(endpoint, lookupOptions)\n      // .then(result => console.log(result))\n      .then(result => result.json())\n      .then(data => setPlayers(prepareData(data))\n      );\n  }, []);\n\n  function prepareData(data) {\n    return data.map((cv) => {\n      return { value: cv.pitcherId, label: cv.pitcherName }\n    });\n  }\n\n  return (\n    <div className=\"searchbar-container\">\n      <Select\n        options={players}\n        defaultOptions\n        value={props.player}\n        onChange={handlePlayerChange}\n        className=\"player-search\"\n      />\n      <Select\n        closeMenuOnSelect={false}\n        isMulti\n        // defaultValue={[...metricOptions]}\n        value={props.metricsObject}\n        options={metricOptions}\n        onChange={handleMetricChange}\n      />\n    </div>\n\n  );\n}","import React from 'react';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n\nexport default function DonutChart(props) {\n  let options = {\n    chart: {\n      type: 'pie',\n      backgroundColor: null\n    },\n    title: {\n      text: 'Pitch Distribution'\n    },\n    // colors: ['#7cb5ec', '#f7a35c', '#90ee7e', '#7798BF', '#aaeeee', '#ff0066',\n    // '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n    colors: ['#819ca9', '#29434e', '#1e88e5', '#6ab7ff', '#005cb2', '#546e7a'],\n    tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          distance: -30,\n          format: '<b>{point.name}</b>',\n        },\n        showInLegend: false,\n      }\n    },\n    series: [{\n      name: 'Pitch',\n      innerSize: '50%',\n      colorByPoint: true,\n      // data: data\n      data: props.pitchDist\n    }]\n  }\n\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n    />\n  );\n}","import React from 'react';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more'\n\nHighchartsMore(Highcharts);\n\nexport default function SpiderChart(props) {\n  const options = {\n    chart: {\n      polar: true,\n      type: 'line',\n      backgroundColor: null\n    },\n    title: {\n      text: 'Metric by Pitch Type',\n    },\n    // colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\n    //     '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n    colors: ['#819ca9', '#29434e', '#1e88e5', '#6ab7ff', '#005cb2', '#546e7a'],\n    pane: {\n      size: '80%'\n    },\n    xAxis: {\n      categories: ['Cutter', 'Sinker', 'Change', 'Curve',\n        'Fourseam', 'Slider'],\n      tickmarkPlacement: 'on',\n      lineWidth: 0,\n      labels: {\n        // style: {\n        //   color: '#E0E0E3'\n        // }\n      }\n    },\n    yAxis: {\n      gridLineInterpolation: 'polygon',\n      lineWidth: 0,\n      min: 0,\n      max: 100,\n      labels: {\n        formatter: function() {\n          return this.value + '%';\n        },\n        // style: {\n        //   color: '#E0E0E3'\n        // }\n      }\n    },\n    tooltip: {\n      shared: true,\n      pointFormat: '<span style=\"color:{series.color}\">{series.name}: <b>{point.y:,.0f}%</b><br/>'\n    },\n    // legend: {\n    //   itemStyle: {\n    //     color: '#E0E0E3'\n    //   }\n    // },\n    series: [\n      {\n        name: 'ACES',\n        data: props.pitchMetrics.aces,\n        // pointPlacement: 'on'\n      },\n      {\n        name: 'Whiffs',\n        data: props.pitchMetrics.whiff\n        // data: [50, 39, 42, 31, 26, 14],\n        // pointPlacement: 'on'\n      },\n      {\n        name: 'CSW',\n        data: props.pitchMetrics.csw\n      //   data: [20, 19, 62, 71, 96, 19],\n      //   pointPlacement: 'on'\n      },\n      // {\n      //   name: 'GB+PU%',\n      //   data: [22, 93, 33, 45, 78, 34],\n      //   pointPlacement: 'on'\n      // }\n    ]\n  };\n\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n    />\n  );\n}","import React, { useState, useEffect } from 'react';\n\nimport DonutChart from './DonutChart';\nimport SpiderChart from './SpiderChart';\n\nexport default function ChartResults(props) {\n  const [pitchDist, setPitchDist] = useState([\n    { y: 0 }, { y: 0 }, { y: 0 }, { y: 0 }, { y: 0 }, { y: 0 }\n  ]);\n  const [pitchMetrics, setPitchMetrics] = useState(\n    {\n      whiff: [0, 0, 0, 0, 0, 0],\n      csw: [0, 0, 0, 0, 0, 0],\n      aces: [0, 0, 0, 0, 0, 0]\n    }\n  );\n\n  useEffect(() => {\n    // console.log('chart results effect');\n    const playerId = props.playerId;\n    const endpoint = `https://ks506u80el.execute-api.us-west-2.amazonaws.com/dev/pitcher/${playerId}`;\n    let lookupOptions = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n\n    fetch(endpoint, lookupOptions)\n      .then(result => result.json())\n      .then(data => {\n        // console.log(data);\n        const pitchDistArray = [];\n        let whiffMetric = [];\n        let cswMetric = [];\n        let acesMetric = [];\n        for (let pitchType of Object.keys(data)) {\n          if (pitchType !== 'pitcherId'\n            && pitchType !== 'pitcherName'\n            && pitchType !== 'All') {\n            let dist = data[pitchType].Num\n            let whiff = data[pitchType]['Whiffs%Rank'];\n            let csw = data[pitchType]['CSWRank'];\n            let aces = data[pitchType]['ACES'];\n            whiff = whiff > 0 ? whiff : 0;\n            csw = csw > 0 ? csw : 0;\n            aces = aces > 0 ? aces : 0;\n            let name;\n            if (dist === 0) {\n              name = \"\";\n              whiff = 0;\n              csw = 0;\n            } else {\n              name = pitchType;\n            }\n            pitchDistArray.push({ name: name, y: Number(dist) });\n            whiffMetric.push(whiff);\n            cswMetric.push(csw);\n            acesMetric.push(aces);\n          } else if (pitchType === 'All') {\n            // console.log(data[pitchType]);\n            props.setPlayerMetrics({\n              Whiffs: {value: data[pitchType]['Whiffs'], percentile: data[pitchType]['Whiffs%Rank']},\n              CSW: {value: data[pitchType]['CSW'], percentile: data[pitchType]['CSWRank']},\n              ACES: {value: data[pitchType]['ACES_Value'], percentile: data[pitchType]['ACES']}\n            });\n          }\n        }\n        setPitchDist(pitchDistArray);\n        whiffMetric = props.metrics.includes('Whiffs')\n          ? whiffMetric.map(x => x * 100) : [0, 0, 0, 0, 0, 0];\n        cswMetric = props.metrics.includes('CSW')\n          ? cswMetric.map(x => x * 100) : [0, 0, 0, 0, 0, 0];\n        acesMetric = props.metrics.includes('ACES')\n          ? acesMetric.map(x => x * 100) : [0, 0, 0, 0, 0, 0];\n        setPitchMetrics({\n          whiff: whiffMetric,\n          csw: cswMetric,\n          aces: acesMetric,\n        });\n      })\n      .catch(err => console.log(err));\n  }, [props.playerId, props.metrics, props.setPlayerMetrics]); // eslint-disable-line \n\n  return (\n    <div className=\"charts-container\">\n      <div className='chart-item'>\n        <DonutChart\n          playerId={props.playerId}\n          pitchDist={pitchDist}\n        />\n      </div>\n      <div className=\"chart-item\">\n        <SpiderChart\n          playerId={props.playerId}\n          pitchMetrics={pitchMetrics}\n        />\n      </div>\n    </div>\n  );\n}","import React from 'react';\n\nexport default function MetricTable(props) {\n  let playerMetrics = props.playerMetrics;\n\n  return (\n    <div className=\"metric-table-container\">\n      <table className=\"metric-table\">\n        <tbody>\n          <tr>\n            <th>Metric</th>\n            <th>Value</th>\n            <th>Percentile</th>\n          </tr>\n          <tr>\n            <td>ACES</td>\n            <td>{playerMetrics['ACES']['value'].toFixed(2)}</td>\n            <td>{(playerMetrics['ACES']['percentile'] * 100).toFixed(0) + '%'}</td>\n          </tr>\n          <tr>\n            <td>Whiffs%</td>\n            <td>{playerMetrics['Whiffs']['value'].toFixed(2)}</td>\n            <td>{(playerMetrics['Whiffs']['percentile'] * 100).toFixed(0) + '%'}</td>\n          </tr>\n          <tr>\n            <td>CSW%</td>\n            <td>{playerMetrics['CSW']['value'].toFixed(2)}</td>\n            <td>{(playerMetrics['CSW']['percentile'] * 100).toFixed(0) + '%'}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}","import React, { useState } from 'react';\n\nimport InfoHeading from './InfoHeading';\nimport SearchBar from './SearchBar';\nimport ChartResults from './ChartResults';\nimport MetricTable from './MetricTable';\n\nexport default function PitchingTool(props) {\n  const [playerName, setPlayerName] = useState(\"Clayton Kershaw\");\n  const [playerId, setPlayerId] = useState(\"ckershaw\");\n  const [metrics, setMetrics] = useState(['ACES', 'Whiffs']);\n  const [playerMetrics, setPlayerMetrics] = useState({\n    ACES: {value: 0, percentile: 0},\n    Whiffs: {value: 0, percentile: 0},\n    CSW: {value: 0, percentile: 0}\n  });\n  const playerObject = { value: playerId, label: playerName };\n  const metricsObject = metrics.map(cv => ({ value: cv, label: cv }));\n\n\n  return (\n    <div className=\"card\">\n      <div className=\"\">\n        <InfoHeading />\n        <div className=\"search-and-metric-container\">\n          <SearchBar\n            setPlayerId={setPlayerId}\n            setPlayerName={setPlayerName}\n            player={playerObject}\n            setMetrics={setMetrics}\n            metricsObject={metricsObject}\n          />\n          <MetricTable playerMetrics={playerMetrics} />\n        </div>\n      </div>\n      <ChartResults\n        playerId={playerObject.value}\n        metrics={metrics}\n        setPlayerMetrics={setPlayerMetrics}\n      />\n    </div>\n  );\n}","import React from 'react';\n\n\nimport PitchingTool from './components/PitchingTool';\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"App\">\n        <PitchingTool />\n      </div>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}